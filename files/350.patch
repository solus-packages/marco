From c7aae99b2ff851505afbcac1ccb4c8537455be6b Mon Sep 17 00:00:00 2001
From: Victor Kareh <vkareh@vkareh.net>
Date: Mon, 11 Sep 2017 11:02:14 -0400
Subject: [PATCH 1/6] XPresent extension support - first pass

---
 configure.ac                        |  17 +++-
 src/compositor/compositor-xrender.c | 159 ++++++++++++++++++++++++++++++------
 src/core/display.c                  |   4 +
 src/core/screen.c                   |   9 +-
 4 files changed, 157 insertions(+), 32 deletions(-)

diff --git a/configure.ac b/configure.ac
index f2ac9ba..cf2b548 100644
--- a/configure.ac
+++ b/configure.ac
@@ -154,7 +154,7 @@ AC_CHECK_HEADERS(execinfo.h, [AC_CHECK_FUNCS(backtrace)])
 
 AM_GLIB_GNU_GETTEXT
 
-PKG_CHECK_MODULES(ALL, glib-2.0 >= 2.36.0)
+PKG_CHECK_MODULES(ALL, glib-2.0 >= 2.36.0 xpresent)
 PKG_CHECK_MODULES(MARCO_MESSAGE, gtk+-3.0 >= $GTK_MIN_VERSION)
 PKG_CHECK_MODULES(MARCO_WINDOW_DEMO, gtk+-3.0 >= $GTK_MIN_VERSION)
 
@@ -415,7 +415,19 @@ if test "x$found_xsync" = "xyes"; then
    AC_DEFINE(HAVE_XSYNC, , [Have the Xsync extension library])
 fi
 
-MARCO_LIBS="$MARCO_LIBS $XSYNC_LIBS $RANDR_LIBS $SHAPE_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS -lm"
+XPRESENT_LIBS=
+found_xpresent=no
+AC_CHECK_LIB(Xpresent, XPresentPixmap,
+               [AC_CHECK_HEADER(X11/extensions/Xpresent.h,
+                                XPRESENT_LIBS=-lXpresent found_xpresent=yes,,
+        [#include <X11/Xlib.h>])],
+               , $ALL_X_LIBS)
+
+if test "x$found_xpresent" = "xyes"; then
+   AC_DEFINE(HAVE_PRESENT, , [Have the Xpresent extension library])
+fi
+
+MARCO_LIBS="$MARCO_LIBS $XSYNC_LIBS $RANDR_LIBS $SHAPE_LIBS $XPRESENT_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS -lm"
 MARCO_MESSAGE_LIBS="$MARCO_MESSAGE_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
 MARCO_WINDOW_DEMO_LIBS="$MARCO_WINDOW_DEMO_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
 MARCO_PROPS_LIBS="$MARCO_PROPS_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
@@ -523,6 +535,7 @@ marco-$VERSION:
 	Shape extension:          ${found_shape}
 	Resize-and-rotate:        ${found_randr}
 	Xsync:                    ${found_xsync}
+	Xpresent:                 ${found_xpresent}
 	Render:                   ${have_xrender}
 	Xcursor:                  ${have_xcursor}
 "
diff --git a/src/compositor/compositor-xrender.c b/src/compositor/compositor-xrender.c
index 04e89f6..34122a9 100644
--- a/src/compositor/compositor-xrender.c
+++ b/src/compositor/compositor-xrender.c
@@ -39,6 +39,7 @@
 #include <cairo/cairo-xlib.h>
 
 #include "display.h"
+#include "../core/display-private.h"
 #include "screen.h"
 #include "frame.h"
 #include "errors.h"
@@ -52,6 +53,7 @@
 #include <X11/extensions/Xdamage.h>
 #include <X11/extensions/Xfixes.h>
 #include <X11/extensions/Xrender.h>
+#include <X11/extensions/Xpresent.h>
 
 #define USE_IDLE_REPAINT 1
 
@@ -103,6 +105,9 @@ typedef struct _MetaCompositorXRender
   guint enabled : 1;
   guint show_redraw : 1;
   guint debug : 1;
+  guint has_present :1;
+
+  int present_major;
 } MetaCompositorXRender;
 
 typedef struct _conv
@@ -118,6 +123,7 @@ typedef struct _shadow
   guchar *shadow_top;
 } shadow;
 
+#define NUM_BUFFER      2
 typedef struct _MetaCompScreen
 {
   MetaScreen *screen;
@@ -132,10 +138,13 @@ typedef struct _MetaCompScreen
   shadow *shadows[LAST_SHADOW_TYPE];
 
   Picture root_picture;
-  Picture root_buffer;
+  Picture root_buffers[NUM_BUFFER];
+  Pixmap  root_pixmaps[NUM_BUFFER];
+  int root_current;
   Picture black_picture;
   Picture trans_black_picture;
   Picture root_tile;
+  XserverRegion prev_damage;
   XserverRegion all_damage;
 
   guint overlays;
@@ -143,6 +152,10 @@ typedef struct _MetaCompScreen
   gboolean clip_changed;
 
   GSList *dock_windows;
+
+  uint32_t present_serial;
+  XID present_eid;
+  gboolean present_pending;
 } MetaCompScreen;
 
 typedef struct _MetaCompWindow
@@ -675,6 +688,24 @@ find_window_for_child_window_in_display (MetaDisplay *display,
   return NULL;
 }
 
+static MetaScreen *
+find_screen_from_output(MetaDisplay *display, Window output)
+{
+  int i;
+  Display *xdisplay = meta_display_get_xdisplay(display);
+
+  for (i = 0; i < ScreenCount(xdisplay); i++)
+    {
+      MetaScreen *screen = meta_display_screen_for_x_screen(display,
+                                                            ScreenOfDisplay(xdisplay, i));
+      MetaCompScreen *info = meta_screen_get_compositor_data(screen);
+
+      if (info->output == output)
+        return screen;
+    }
+  return NULL;
+}
+
 static Picture
 solid_picture (MetaDisplay *display,
                MetaScreen  *screen,
@@ -796,8 +827,8 @@ root_tile (MetaScreen *screen)
   return picture;
 }
 
-static Picture
-create_root_buffer (MetaScreen *screen)
+static void
+create_root_buffer (MetaScreen *screen, int b)
 {
   MetaDisplay *display = meta_screen_get_display (screen);
   Display *xdisplay = meta_display_get_xdisplay (display);
@@ -810,7 +841,7 @@ create_root_buffer (MetaScreen *screen)
 
   if (info == NULL)
     {
-      return None;
+      return;
     }
 
   meta_screen_get_size (screen, &screen_width, &screen_height);
@@ -819,16 +850,15 @@ create_root_buffer (MetaScreen *screen)
   depth = DefaultDepth (xdisplay, screen_number);
 
   format = XRenderFindVisualFormat (xdisplay, visual);
-  g_return_val_if_fail (format != NULL, None);
+  g_return_if_fail (format != NULL);
 
   root_pixmap = XCreatePixmap (xdisplay, info->output,
                                screen_width, screen_height, depth);
-  g_return_val_if_fail (root_pixmap != None, None);
 
   pict = XRenderCreatePicture (xdisplay, root_pixmap, format, 0, NULL);
-  XFreePixmap (xdisplay, root_pixmap);
 
-  return pict;
+  info->root_pixmaps[b] = root_pixmap;
+  info->root_buffers[b] = pict;
 }
 
 static void
@@ -1306,16 +1336,14 @@ paint_windows (MetaScreen   *screen,
 
 static void
 paint_all (MetaScreen   *screen,
-           XserverRegion region)
+           XserverRegion region,
+           int           b)
 {
   MetaCompScreen *info = meta_screen_get_compositor_data (screen);
   MetaDisplay *display = meta_screen_get_display (screen);
   Display *xdisplay = meta_display_get_xdisplay (display);
   int screen_width, screen_height;
 
-  /* Set clipping to the given region */
-  XFixesSetPictureClipRegion (xdisplay, info->root_picture, 0, 0, region);
-
   meta_screen_get_size (screen, &screen_width, &screen_height);
 
   if (DISPLAY_COMPOSITOR (display)->show_redraw)
@@ -1330,6 +1358,9 @@ paint_all (MetaScreen   *screen,
                                ((double) (rand () % 100)) / 100.0,
                                ((double) (rand () % 100)) / 100.0);
 
+      /* Set clipping to the given region */
+      XFixesSetPictureClipRegion (xdisplay, info->root_picture, 0, 0, region);
+
       XRenderComposite (xdisplay, PictOpOver, overlay, None, info->root_picture,
                         0, 0, 0, 0, 0, 0, screen_width, screen_height);
       XRenderFreePicture (xdisplay, overlay);
@@ -1337,13 +1368,24 @@ paint_all (MetaScreen   *screen,
       usleep (100 * 1000);
     }
 
-  if (info->root_buffer == None)
-    info->root_buffer = create_root_buffer (screen);
-
-  paint_windows (screen, info->windows, info->root_buffer, region);
-
-  XFixesSetPictureClipRegion (xdisplay, info->root_buffer, 0, 0, region);
-  XRenderComposite (xdisplay, PictOpSrc, info->root_buffer, None,
+  if (info->root_buffers[b] == None)
+    create_root_buffer (screen, b);
+
+  paint_windows (screen, info->windows, info->root_buffers[b], region);
+
+  /* FIXME: Things break here... */
+  /* XPresentPixmap(xdisplay, */
+  /*                info->output, */
+  /*                info->root_pixmaps[b], */
+  /*                ++info->present_serial, */
+  /*                None, */
+  /*                region, */
+  /*                0, 0, */
+  /*                None, None, None, PresentOptionNone, */
+  /*                0, 1, 0, NULL, 0); */
+  /* info->present_pending = True; */
+  XFixesSetPictureClipRegion (xdisplay, info->root_buffers[b], 0, 0, region);
+  XRenderComposite (xdisplay, PictOpSrc, info->root_buffers[b], None,
                     info->root_picture, 0, 0, 0, 0, 0, 0,
                     screen_width, screen_height);
 }
@@ -1355,11 +1397,19 @@ repair_screen (MetaScreen *screen)
   MetaDisplay *display = meta_screen_get_display (screen);
   Display *xdisplay = meta_display_get_xdisplay (display);
 
-  if (info!=NULL && info->all_damage != None)
+  if (info!=NULL && info->all_damage != None && !info->present_pending)
     {
+      XserverRegion     damage = info->all_damage;
       meta_error_trap_push (display);
-      paint_all (screen, info->all_damage);
-      XFixesDestroyRegion (xdisplay, info->all_damage);
+      if (info->prev_damage) {
+        XFixesUnionRegion(xdisplay, info->prev_damage, info->prev_damage, damage);
+        damage = info->prev_damage;
+      }
+      paint_all (screen, damage, info->root_current);
+      if (info->prev_damage)
+        XFixesDestroyRegion (xdisplay, info->prev_damage);
+      info->root_current = !info->root_current;
+      info->prev_damage = info->all_damage;
       info->all_damage = None;
       info->clip_changed = FALSE;
       meta_error_trap_pop (display, FALSE);
@@ -2143,10 +2193,18 @@ process_configure_notify (MetaCompositorXRender  *compositor,
         return;
 
       info = meta_screen_get_compositor_data (screen);
-      if (info != NULL && info->root_buffer)
+      if (info != NULL)
         {
-          XRenderFreePicture (xdisplay, info->root_buffer);
-          info->root_buffer = None;
+          int b;
+          for (b = 0; b < NUM_BUFFER; b++)
+            {
+              if (info->root_buffers[b]) {
+                XRenderFreePicture (xdisplay, info->root_buffers[b]);
+                XFreePixmap (xdisplay, info->root_pixmaps[b]);
+                info->root_buffers[b] = None;
+                info->root_pixmaps[b] = None;
+              }
+            }
         }
 
       damage_screen (screen);
@@ -2422,6 +2480,41 @@ process_shape (MetaCompositorXRender *compositor,
     }
 }
 
+static void
+xrender_present_complete(MetaScreen *screen,
+                         XPresentCompleteNotifyEvent *ce)
+{
+  MetaCompScreen *info = meta_screen_get_compositor_data (screen);
+
+  info->present_pending = False;
+  repair_screen(screen);
+}
+
+static void
+process_generic(MetaCompositorXRender   *compositor,
+                XGenericEvent           *event)
+{
+  XGenericEventCookie *ge = (XGenericEventCookie *) event;
+
+  if (ge->extension == compositor->present_major) {
+    Display *xdisplay = meta_display_get_xdisplay (compositor->display);
+    XGetEventData(xdisplay, ge);
+    switch (ge->evtype) {
+    case PresentConfigureNotify:
+      break;
+    case PresentCompleteNotify: {
+      XPresentCompleteNotifyEvent *ce = ge->data;
+      MetaScreen *screen = find_screen_from_output(compositor->display, ce->window);
+      if (screen) {
+        xrender_present_complete(screen, ce);
+      }
+    }
+      break;
+    }
+    XFreeEventData(xdisplay, ge);
+  }
+}
+
 static int
 timeout_debug (MetaCompositorXRender *compositor)
 {
@@ -2506,6 +2599,7 @@ xrender_manage_screen (MetaCompositor *compositor,
                        MetaScreen     *screen)
 {
 #ifdef HAVE_COMPOSITE_EXTENSIONS
+  MetaCompositorXRender *xrc = (MetaCompositorXRender *) compositor;
   MetaCompScreen *info;
   MetaDisplay *display = meta_screen_get_display (screen);
   Display *xdisplay = meta_display_get_xdisplay (display);
@@ -2513,6 +2607,7 @@ xrender_manage_screen (MetaCompositor *compositor,
   XRenderPictFormat *visual_format;
   int screen_number = meta_screen_get_screen_number (screen);
   Window xroot = meta_screen_get_xroot (screen);
+  int b;
 
   /* Check if the screen is already managed */
   if (meta_screen_get_compositor_data (screen))
@@ -2554,7 +2649,10 @@ xrender_manage_screen (MetaCompositor *compositor,
       return;
     }
 
-  info->root_buffer = None;
+  for (b = 0; b < NUM_BUFFER; b++) {
+    info->root_buffers[b] = None;
+    info->root_pixmaps[b] = None;
+  }
   info->black_picture = solid_picture (display, screen, TRUE, 1, 0, 0, 0);
 
   info->root_tile = None;
@@ -2578,6 +2676,10 @@ xrender_manage_screen (MetaCompositor *compositor,
   else
     meta_verbose ("Disabling shadows\n");
 
+  if (xrc->has_present)
+    info->present_eid = XPresentSelectInput(xdisplay, info->output,
+                                            PresentConfigureNotifyMask|PresentCompleteNotifyMask);
+
   XClearArea (xdisplay, info->output, 0, 0, 0, 0, TRUE);
 
   meta_screen_set_cm_selection (screen);
@@ -2761,6 +2863,10 @@ xrender_process_event (MetaCompositor *compositor,
       process_destroy (xrc, (XDestroyWindowEvent *) event);
       break;
 
+    case GenericEvent:
+      process_generic (xrc, (XGenericEvent *) event);
+      break;
+
     default:
       if (event->type == meta_display_get_damage_event_base (xrc->display) + XDamageNotify)
         process_damage (xrc, (XDamageNotifyEvent *) event);
@@ -3066,6 +3172,7 @@ meta_compositor_xrender_new (MetaDisplay *display)
   xrc->atom_net_wm_window_type_tooltip = atoms[14];
   xrc->show_redraw = FALSE;
   xrc->debug = FALSE;
+  xrc->has_present = XPresentQueryExtension(xdisplay, &xrc->present_major, NULL, NULL);
 
 #ifdef USE_IDLE_REPAINT
   meta_verbose ("Using idle repaint\n");
diff --git a/src/core/display.c b/src/core/display.c
index 9601b4e..a721def 100644
--- a/src/core/display.c
+++ b/src/core/display.c
@@ -69,6 +69,10 @@
 	#include <X11/extensions/Xrender.h>
 #endif
 
+#ifdef HAVE_PRESENT
+	#include <X11/extensions/Xpresent.h>
+#endif
+
 #ifdef HAVE_XKB
 	#include <X11/XKBlib.h>
 #endif
diff --git a/src/core/screen.c b/src/core/screen.c
index 28d2feb..308795e 100644
--- a/src/core/screen.c
+++ b/src/core/screen.c
@@ -740,15 +740,16 @@ list_windows (MetaScreen *screen)
                             children[i], &info->attrs);
 
       if (meta_error_trap_pop_with_return (screen->display, TRUE))
-	{
+        {
           meta_verbose ("Failed to get attributes for window 0x%lx\n",
                         children[i]);
-	  g_free (info);
+          g_free (info);
+          continue;
         }
       else
         {
-	  info->xwindow = children[i];
-	}
+          info->xwindow = children[i];
+        }
 
       result = g_list_prepend (result, info);
     }

From d6ead208ca4af7d6b28134d8480c23878f84d033 Mon Sep 17 00:00:00 2001
From: Victor Kareh <vkareh@vkareh.net>
Date: Tue, 12 Sep 2017 13:23:46 -0400
Subject: [PATCH 2/6] Cancel present_pending flag when erroring out

---
 src/compositor/compositor-xrender.c | 42 +++++++++++++++++++++++++++----------
 1 file changed, 31 insertions(+), 11 deletions(-)

diff --git a/src/compositor/compositor-xrender.c b/src/compositor/compositor-xrender.c
index 34122a9..c34f759 100644
--- a/src/compositor/compositor-xrender.c
+++ b/src/compositor/compositor-xrender.c
@@ -1373,21 +1373,34 @@ paint_all (MetaScreen   *screen,
 
   paint_windows (screen, info->windows, info->root_buffers[b], region);
 
-  /* FIXME: Things break here... */
-  /* XPresentPixmap(xdisplay, */
-  /*                info->output, */
-  /*                info->root_pixmaps[b], */
-  /*                ++info->present_serial, */
-  /*                None, */
-  /*                region, */
-  /*                0, 0, */
-  /*                None, None, None, PresentOptionNone, */
-  /*                0, 1, 0, NULL, 0); */
-  /* info->present_pending = True; */
   XFixesSetPictureClipRegion (xdisplay, info->root_buffers[b], 0, 0, region);
   XRenderComposite (xdisplay, PictOpSrc, info->root_buffers[b], None,
                     info->root_picture, 0, 0, 0, 0, 0, 0,
                     screen_width, screen_height);
+
+  /* FIXME: Things break here with BadWindow error */
+  g_message("XPresentPixmap");
+  meta_error_trap_push (display);
+  XPresentPixmap(xdisplay,
+                 info->output,
+                 info->root_pixmaps[b],
+                 ++info->present_serial,
+                 None,
+                 region,
+                 0, 0,
+                 None, None, None, PresentOptionNone,
+                 0, 1, 0, NULL, 0);
+  int error_code;
+  error_code = meta_error_trap_pop_with_return (display, FALSE);
+  g_message("error_code: %d", error_code);
+  if (error_code == BadWindow || error_code == BadMatch)
+    {
+      info->present_pending = False;
+    }
+  else
+    {
+      info->present_pending = True;
+    }
 }
 
 static void
@@ -2484,6 +2497,7 @@ static void
 xrender_present_complete(MetaScreen *screen,
                          XPresentCompleteNotifyEvent *ce)
 {
+  g_message("xrender_present_complete");
   MetaCompScreen *info = meta_screen_get_compositor_data (screen);
 
   info->present_pending = False;
@@ -2494,15 +2508,20 @@ static void
 process_generic(MetaCompositorXRender   *compositor,
                 XGenericEvent           *event)
 {
+  g_message("process_generic");
   XGenericEventCookie *ge = (XGenericEventCookie *) event;
 
+  g_message("ge->extension: %s", ge->extension);
+  g_message("compositor->present_major: %s", compositor->present_major);
   if (ge->extension == compositor->present_major) {
     Display *xdisplay = meta_display_get_xdisplay (compositor->display);
     XGetEventData(xdisplay, ge);
     switch (ge->evtype) {
     case PresentConfigureNotify:
+      g_message("PresentConfigureNotify");
       break;
     case PresentCompleteNotify: {
+      g_message("PresentCompleteNotify");
       XPresentCompleteNotifyEvent *ce = ge->data;
       MetaScreen *screen = find_screen_from_output(compositor->display, ce->window);
       if (screen) {
@@ -3173,6 +3192,7 @@ meta_compositor_xrender_new (MetaDisplay *display)
   xrc->show_redraw = FALSE;
   xrc->debug = FALSE;
   xrc->has_present = XPresentQueryExtension(xdisplay, &xrc->present_major, NULL, NULL);
+  g_message("has_present: %d", xrc->has_present);
 
 #ifdef USE_IDLE_REPAINT
   meta_verbose ("Using idle repaint\n");

From 1780b16371ac163dce59764be4a0229b2955b8a7 Mon Sep 17 00:00:00 2001
From: Victor Kareh <vkareh@vkareh.net>
Date: Wed, 20 Sep 2017 11:51:05 -0400
Subject: [PATCH 3/6] Add in some changes from xfwm4

---
 src/compositor/compositor-xrender.c | 221 +++++++++++++++++++++++++-----------
 1 file changed, 155 insertions(+), 66 deletions(-)

diff --git a/src/compositor/compositor-xrender.c b/src/compositor/compositor-xrender.c
index c34f759..b387ece 100644
--- a/src/compositor/compositor-xrender.c
+++ b/src/compositor/compositor-xrender.c
@@ -53,7 +53,10 @@
 #include <X11/extensions/Xdamage.h>
 #include <X11/extensions/Xfixes.h>
 #include <X11/extensions/Xrender.h>
+
+#ifdef HAVE_PRESENT
 #include <X11/extensions/Xpresent.h>
+#endif
 
 #define USE_IDLE_REPAINT 1
 
@@ -153,8 +156,8 @@ typedef struct _MetaCompScreen
 
   GSList *dock_windows;
 
-  uint32_t present_serial;
   XID present_eid;
+  gboolean use_present;
   gboolean present_pending;
 } MetaCompScreen;
 
@@ -827,38 +830,57 @@ root_tile (MetaScreen *screen)
   return picture;
 }
 
-static void
-create_root_buffer (MetaScreen *screen, int b)
+static Pixmap
+create_root_pixmap (MetaScreen *screen)
+{
+  MetaDisplay *display = meta_screen_get_display (screen);
+  Display *xdisplay = meta_display_get_xdisplay (display);
+  MetaCompScreen *info = meta_screen_get_compositor_data (screen);
+  Window xroot = meta_screen_get_xroot (screen);
+  Pixmap pixmap;
+  int depth, screen_width, screen_height, screen_number;
+
+  if (info == NULL)
+    {
+      return None;
+    }
+
+  meta_screen_get_size (screen, &screen_width, &screen_height);
+  screen_number = meta_screen_get_screen_number (screen);
+
+  depth = DefaultDepth (xdisplay, screen_number);
+  pixmap = XCreatePixmap (xdisplay, xroot,
+                          screen_width, screen_height,
+                          depth);
+
+  return pixmap;
+}
+
+static Picture
+create_root_buffer (MetaScreen *screen, Pixmap root_pixmap)
 {
   MetaDisplay *display = meta_screen_get_display (screen);
   Display *xdisplay = meta_display_get_xdisplay (display);
   MetaCompScreen *info = meta_screen_get_compositor_data (screen);
   Picture pict;
   XRenderPictFormat *format;
-  Pixmap root_pixmap;
   Visual *visual;
-  int depth, screen_width, screen_height, screen_number;
+  int screen_number;
 
   if (info == NULL)
     {
-      return;
+      return None;
     }
+  g_return_val_if_fail (root_pixmap != None, None);
 
-  meta_screen_get_size (screen, &screen_width, &screen_height);
   screen_number = meta_screen_get_screen_number (screen);
   visual = DefaultVisual (xdisplay, screen_number);
-  depth = DefaultDepth (xdisplay, screen_number);
 
   format = XRenderFindVisualFormat (xdisplay, visual);
-  g_return_if_fail (format != NULL);
-
-  root_pixmap = XCreatePixmap (xdisplay, info->output,
-                               screen_width, screen_height, depth);
+  g_return_val_if_fail (format != NULL, None);
 
   pict = XRenderCreatePicture (xdisplay, root_pixmap, format, 0, NULL);
-
-  info->root_pixmaps[b] = root_pixmap;
-  info->root_buffers[b] = pict;
+  return pict;
 }
 
 static void
@@ -1136,10 +1158,48 @@ paint_dock_shadows (MetaScreen   *screen,
     }
 }
 
+#ifdef HAVE_PRESENT
+static gboolean
+present_flip (MetaScreen *screen, XserverRegion region, Pixmap pixmap)
+{
+  static uint32_t present_serial;
+
+  MetaCompScreen *info = meta_screen_get_compositor_data (screen);
+  MetaDisplay *display = meta_screen_get_display (screen);
+  Display *xdisplay = meta_display_get_xdisplay (display);
+
+  /* FIXME: Things break here with BadWindow error */
+  meta_error_trap_push (display);
+  XPresentPixmap(xdisplay,
+                 info->output,
+                 pixmap,
+                 present_serial,
+                 None,
+                 region,
+                 0, 0,
+                 None, None, None, PresentOptionNone,
+                 0, 1, 0, NULL, 0);
+
+  int error_code;
+  error_code = meta_error_trap_pop_with_return (display, FALSE);
+  g_message("XPresentPixmap window %p pixmap %p error: %i", info->output, pixmap, error_code);
+  if (error_code)
+    {
+      info->use_present = FALSE;
+      return FALSE;
+    }
+
+  present_serial++;
+
+  return TRUE;
+}
+#endif /* HAVE_PRESENT */
+
 static void
 paint_windows (MetaScreen   *screen,
                GList        *windows,
                Picture       root_buffer,
+               Pixmap        root_pixmap,
                XserverRegion region)
 {
   MetaDisplay *display = meta_screen_get_display (screen);
@@ -1331,6 +1391,22 @@ paint_windows (MetaScreen   *screen,
         }
     }
 
+
+  XFixesSetPictureClipRegion (xdisplay, root_buffer, 0, 0, region);
+
+#ifdef HAVE_PRESENT
+  if (info->use_present)
+    info->present_pending = present_flip (screen, region, root_pixmap);
+#endif
+
+  if (!info->use_present || !info->present_pending)
+    {
+      XRenderComposite (xdisplay, PictOpSrc, root_buffer, None,
+          info->root_picture, 0, 0, 0, 0, 0, 0,
+          screen_width, screen_height);
+    }
+
+  XFlush (xdisplay);
   XFixesDestroyRegion (xdisplay, paint_region);
 }
 
@@ -1368,39 +1444,13 @@ paint_all (MetaScreen   *screen,
       usleep (100 * 1000);
     }
 
-  if (info->root_buffers[b] == None)
-    create_root_buffer (screen, b);
-
-  paint_windows (screen, info->windows, info->root_buffers[b], region);
+  if (info->root_pixmaps[b] == None)
+    info->root_pixmaps[b] = create_root_pixmap (screen);
 
-  XFixesSetPictureClipRegion (xdisplay, info->root_buffers[b], 0, 0, region);
-  XRenderComposite (xdisplay, PictOpSrc, info->root_buffers[b], None,
-                    info->root_picture, 0, 0, 0, 0, 0, 0,
-                    screen_width, screen_height);
+  if (info->root_buffers[b] == None)
+    info->root_buffers[b] = create_root_buffer (screen, info->root_pixmaps[b]);
 
-  /* FIXME: Things break here with BadWindow error */
-  g_message("XPresentPixmap");
-  meta_error_trap_push (display);
-  XPresentPixmap(xdisplay,
-                 info->output,
-                 info->root_pixmaps[b],
-                 ++info->present_serial,
-                 None,
-                 region,
-                 0, 0,
-                 None, None, None, PresentOptionNone,
-                 0, 1, 0, NULL, 0);
-  int error_code;
-  error_code = meta_error_trap_pop_with_return (display, FALSE);
-  g_message("error_code: %d", error_code);
-  if (error_code == BadWindow || error_code == BadMatch)
-    {
-      info->present_pending = False;
-    }
-  else
-    {
-      info->present_pending = True;
-    }
+  paint_windows (screen, info->windows, info->root_buffers[b], info->root_pixmaps[b], region);
 }
 
 static void
@@ -1410,22 +1460,45 @@ repair_screen (MetaScreen *screen)
   MetaDisplay *display = meta_screen_get_display (screen);
   Display *xdisplay = meta_display_get_xdisplay (display);
 
-  if (info!=NULL && info->all_damage != None && !info->present_pending)
+  g_return_if_fail(info != NULL);
+
+  if (info->all_damage != None)
     {
-      XserverRegion     damage = info->all_damage;
-      meta_error_trap_push (display);
-      if (info->prev_damage) {
-        XFixesUnionRegion(xdisplay, info->prev_damage, info->prev_damage, damage);
-        damage = info->prev_damage;
-      }
-      paint_all (screen, damage, info->root_current);
-      if (info->prev_damage)
-        XFixesDestroyRegion (xdisplay, info->prev_damage);
-      info->root_current = !info->root_current;
-      info->prev_damage = info->all_damage;
-      info->all_damage = None;
-      info->clip_changed = FALSE;
-      meta_error_trap_pop (display, FALSE);
+#ifdef HAVE_PRESENT
+      if (info->use_present)
+        {
+          if (!info->present_pending)
+            {
+              XserverRegion damage = info->all_damage;
+              meta_error_trap_push (display);
+              if (info->prev_damage)
+                {
+                  XFixesUnionRegion(xdisplay, info->prev_damage, info->prev_damage, damage);
+                  damage = info->prev_damage;
+                }
+
+              /* TODO: Check which region (in damage) gets sent here... */
+              paint_all (screen, damage, info->root_current);
+
+              if (++info->root_current >= NUM_BUFFER)
+                info->root_current = 0;
+
+              if (info->prev_damage)
+                XFixesDestroyRegion (xdisplay, info->prev_damage);
+
+              info->prev_damage = info->all_damage;
+              info->all_damage = None;
+              info->clip_changed = FALSE;
+              meta_error_trap_pop (display, FALSE);
+            }
+        }
+      else
+#endif /* HAVE_PRESENT */
+        {
+          paint_all (screen, info->all_damage, info->root_current);
+          XFixesDestroyRegion (xdisplay, info->all_damage);
+          info->all_damage = None;
+        }
     }
 }
 
@@ -2497,9 +2570,16 @@ static void
 xrender_present_complete(MetaScreen *screen,
                          XPresentCompleteNotifyEvent *ce)
 {
-  g_message("xrender_present_complete");
   MetaCompScreen *info = meta_screen_get_compositor_data (screen);
 
+  g_message("present complete:\n");
+  /* g_message("\teid:      %08x\n", ce->eid); */
+  /* g_message("\twindow:   %08lx\n", ce->window); */
+  /* g_message("\tserial:   %d\n", ce->serial_number); */
+  /* g_message("\tust:      %lld\n", ce->ust); */
+  /* g_message("\tmsc:      %lld\n", ce->msc); */
+  /* g_message("\tscreen:   %p\n", screen); */
+
   info->present_pending = False;
   repair_screen(screen);
 }
@@ -2511,8 +2591,8 @@ process_generic(MetaCompositorXRender   *compositor,
   g_message("process_generic");
   XGenericEventCookie *ge = (XGenericEventCookie *) event;
 
-  g_message("ge->extension: %s", ge->extension);
-  g_message("compositor->present_major: %s", compositor->present_major);
+  g_message("ge->extension: %d", ge->extension);
+  g_message("compositor->present_major: %d", compositor->present_major);
   if (ge->extension == compositor->present_major) {
     Display *xdisplay = meta_display_get_xdisplay (compositor->display);
     XGetEventData(xdisplay, ge);
@@ -2696,8 +2776,17 @@ xrender_manage_screen (MetaCompositor *compositor,
     meta_verbose ("Disabling shadows\n");
 
   if (xrc->has_present)
-    info->present_eid = XPresentSelectInput(xdisplay, info->output,
-                                            PresentConfigureNotifyMask|PresentCompleteNotifyMask);
+    {
+      info->present_eid = XPresentSelectInput(xdisplay, info->output,
+                                              PresentCompleteNotifyMask);
+      info->use_present = TRUE;
+      info->present_pending = FALSE;
+    }
+  else
+    {
+      info->use_present = FALSE;
+      g_message("XPresent not available");
+    }
 
   XClearArea (xdisplay, info->output, 0, 0, 0, 0, TRUE);
 

From 645a8c26e45440af8b57a1b34ac980cc7ee3ee25 Mon Sep 17 00:00:00 2001
From: Victor Kareh <vkareh@vkareh.net>
Date: Sat, 23 Sep 2017 00:58:32 -0400
Subject: [PATCH 4/6] Remove debug output

---
 src/compositor/compositor-xrender.c | 21 +++------------------
 1 file changed, 3 insertions(+), 18 deletions(-)

diff --git a/src/compositor/compositor-xrender.c b/src/compositor/compositor-xrender.c
index b387ece..3773f7c 100644
--- a/src/compositor/compositor-xrender.c
+++ b/src/compositor/compositor-xrender.c
@@ -1182,9 +1182,9 @@ present_flip (MetaScreen *screen, XserverRegion region, Pixmap pixmap)
 
   int error_code;
   error_code = meta_error_trap_pop_with_return (display, FALSE);
-  g_message("XPresentPixmap window %p pixmap %p error: %i", info->output, pixmap, error_code);
   if (error_code)
     {
+      g_warning ("XPresentPixmap window %p pixmap %p error: %i", (void *)info->output, (void *)pixmap, error_code);
       info->use_present = FALSE;
       return FALSE;
     }
@@ -2572,14 +2572,6 @@ xrender_present_complete(MetaScreen *screen,
 {
   MetaCompScreen *info = meta_screen_get_compositor_data (screen);
 
-  g_message("present complete:\n");
-  /* g_message("\teid:      %08x\n", ce->eid); */
-  /* g_message("\twindow:   %08lx\n", ce->window); */
-  /* g_message("\tserial:   %d\n", ce->serial_number); */
-  /* g_message("\tust:      %lld\n", ce->ust); */
-  /* g_message("\tmsc:      %lld\n", ce->msc); */
-  /* g_message("\tscreen:   %p\n", screen); */
-
   info->present_pending = False;
   repair_screen(screen);
 }
@@ -2588,25 +2580,19 @@ static void
 process_generic(MetaCompositorXRender   *compositor,
                 XGenericEvent           *event)
 {
-  g_message("process_generic");
   XGenericEventCookie *ge = (XGenericEventCookie *) event;
 
-  g_message("ge->extension: %d", ge->extension);
-  g_message("compositor->present_major: %d", compositor->present_major);
   if (ge->extension == compositor->present_major) {
     Display *xdisplay = meta_display_get_xdisplay (compositor->display);
     XGetEventData(xdisplay, ge);
     switch (ge->evtype) {
     case PresentConfigureNotify:
-      g_message("PresentConfigureNotify");
       break;
     case PresentCompleteNotify: {
-      g_message("PresentCompleteNotify");
       XPresentCompleteNotifyEvent *ce = ge->data;
       MetaScreen *screen = find_screen_from_output(compositor->display, ce->window);
-      if (screen) {
+      if (screen)
         xrender_present_complete(screen, ce);
-      }
     }
       break;
     }
@@ -2785,7 +2771,7 @@ xrender_manage_screen (MetaCompositor *compositor,
   else
     {
       info->use_present = FALSE;
-      g_message("XPresent not available");
+      g_warning ("XPresent not available");
     }
 
   XClearArea (xdisplay, info->output, 0, 0, 0, 0, TRUE);
@@ -3281,7 +3267,6 @@ meta_compositor_xrender_new (MetaDisplay *display)
   xrc->show_redraw = FALSE;
   xrc->debug = FALSE;
   xrc->has_present = XPresentQueryExtension(xdisplay, &xrc->present_major, NULL, NULL);
-  g_message("has_present: %d", xrc->has_present);
 
 #ifdef USE_IDLE_REPAINT
   meta_verbose ("Using idle repaint\n");

From 24131ff5a2fc2b395dd6e1e1cc6014a2324147ed Mon Sep 17 00:00:00 2001
From: Victor Kareh <vkareh@vkareh.net>
Date: Sun, 24 Sep 2017 11:47:35 -0400
Subject: [PATCH 5/6] Make XPresent optional

---
 configure.ac                        |  2 +-
 src/compositor/compositor-xrender.c | 57 +++++++++++++++++++++++++------------
 2 files changed, 40 insertions(+), 19 deletions(-)

diff --git a/configure.ac b/configure.ac
index cf2b548..f2dd2ea 100644
--- a/configure.ac
+++ b/configure.ac
@@ -154,7 +154,7 @@ AC_CHECK_HEADERS(execinfo.h, [AC_CHECK_FUNCS(backtrace)])
 
 AM_GLIB_GNU_GETTEXT
 
-PKG_CHECK_MODULES(ALL, glib-2.0 >= 2.36.0 xpresent)
+PKG_CHECK_MODULES(ALL, glib-2.0 >= 2.36.0)
 PKG_CHECK_MODULES(MARCO_MESSAGE, gtk+-3.0 >= $GTK_MIN_VERSION)
 PKG_CHECK_MODULES(MARCO_WINDOW_DEMO, gtk+-3.0 >= $GTK_MIN_VERSION)
 
diff --git a/src/compositor/compositor-xrender.c b/src/compositor/compositor-xrender.c
index 3773f7c..33d6ef8 100644
--- a/src/compositor/compositor-xrender.c
+++ b/src/compositor/compositor-xrender.c
@@ -1163,12 +1163,12 @@ static gboolean
 present_flip (MetaScreen *screen, XserverRegion region, Pixmap pixmap)
 {
   static uint32_t present_serial;
+  gboolean debug;
 
   MetaCompScreen *info = meta_screen_get_compositor_data (screen);
   MetaDisplay *display = meta_screen_get_display (screen);
   Display *xdisplay = meta_display_get_xdisplay (display);
 
-  /* FIXME: Things break here with BadWindow error */
   meta_error_trap_push (display);
   XPresentPixmap(xdisplay,
                  info->output,
@@ -1184,7 +1184,16 @@ present_flip (MetaScreen *screen, XserverRegion region, Pixmap pixmap)
   error_code = meta_error_trap_pop_with_return (display, FALSE);
   if (error_code)
     {
-      g_warning ("XPresentPixmap window %p pixmap %p error: %i", (void *)info->output, (void *)pixmap, error_code);
+      debug = DISPLAY_COMPOSITOR (display)->debug;
+
+      if (debug)
+        fprintf (stderr, "XPresentPixmap window %p pixmap %p error: %i\n",
+                 (void *)info->output, (void *)pixmap, error_code);
+
+      if (error_code == BadWindow)
+        g_warning ("XPresent is not compatible with your current system configuration.");
+
+      /* Disable the Present extension for this session to prevent frozen windows */
       info->use_present = FALSE;
       return FALSE;
     }
@@ -1477,7 +1486,6 @@ repair_screen (MetaScreen *screen)
                   damage = info->prev_damage;
                 }
 
-              /* TODO: Check which region (in damage) gets sent here... */
               paint_all (screen, damage, info->root_current);
 
               if (++info->root_current >= NUM_BUFFER)
@@ -2566,6 +2574,7 @@ process_shape (MetaCompositorXRender *compositor,
     }
 }
 
+#ifdef HAVE_PRESENT
 static void
 xrender_present_complete(MetaScreen *screen,
                          XPresentCompleteNotifyEvent *ce)
@@ -2575,6 +2584,7 @@ xrender_present_complete(MetaScreen *screen,
   info->present_pending = False;
   repair_screen(screen);
 }
+#endif /* HAVE_PRESENT */
 
 static void
 process_generic(MetaCompositorXRender   *compositor,
@@ -2582,22 +2592,27 @@ process_generic(MetaCompositorXRender   *compositor,
 {
   XGenericEventCookie *ge = (XGenericEventCookie *) event;
 
-  if (ge->extension == compositor->present_major) {
-    Display *xdisplay = meta_display_get_xdisplay (compositor->display);
-    XGetEventData(xdisplay, ge);
-    switch (ge->evtype) {
-    case PresentConfigureNotify:
-      break;
-    case PresentCompleteNotify: {
-      XPresentCompleteNotifyEvent *ce = ge->data;
-      MetaScreen *screen = find_screen_from_output(compositor->display, ce->window);
-      if (screen)
-        xrender_present_complete(screen, ce);
-    }
-      break;
+  if (ge->extension == compositor->present_major)
+    {
+      Display *xdisplay = meta_display_get_xdisplay (compositor->display);
+      XGetEventData(xdisplay, ge);
+      switch (ge->evtype)
+        {
+#ifdef HAVE_PRESENT
+        case PresentConfigureNotify:
+          break;
+        case PresentCompleteNotify:
+          {
+            XPresentCompleteNotifyEvent *ce = ge->data;
+            MetaScreen *screen = find_screen_from_output(compositor->display, ce->window);
+            if (screen)
+              xrender_present_complete(screen, ce);
+          }
+          break;
+#endif /* HAVE_PRESENT */
+        }
+      XFreeEventData(xdisplay, ge);
     }
-    XFreeEventData(xdisplay, ge);
-  }
 }
 
 static int
@@ -2763,8 +2778,10 @@ xrender_manage_screen (MetaCompositor *compositor,
 
   if (xrc->has_present)
     {
+#ifdef HAVE_PRESENT
       info->present_eid = XPresentSelectInput(xdisplay, info->output,
                                               PresentCompleteNotifyMask);
+#endif /* HAVE_PRESENT */
       info->use_present = TRUE;
       info->present_pending = FALSE;
     }
@@ -3266,7 +3283,11 @@ meta_compositor_xrender_new (MetaDisplay *display)
   xrc->atom_net_wm_window_type_tooltip = atoms[14];
   xrc->show_redraw = FALSE;
   xrc->debug = FALSE;
+#ifdef HAVE_PRESENT
   xrc->has_present = XPresentQueryExtension(xdisplay, &xrc->present_major, NULL, NULL);
+#else
+  xrc->has_present = 0;
+#endif /* HAVE_PRESENT */
 
 #ifdef USE_IDLE_REPAINT
   meta_verbose ("Using idle repaint\n");

From b7bdbb507ab6e5528660be69201b67a68cb228c1 Mon Sep 17 00:00:00 2001
From: Victor Kareh <vkareh@vkareh.net>
Date: Mon, 23 Oct 2017 16:31:52 -0400
Subject: [PATCH 6/6] Add stricter logic for running without XPresent support

---
 src/compositor/compositor-xrender.c | 51 +++++++++++++++++++++----------------
 src/core/display.c                  |  4 ---
 src/core/screen.c                   |  9 +++----
 3 files changed, 33 insertions(+), 31 deletions(-)

diff --git a/src/compositor/compositor-xrender.c b/src/compositor/compositor-xrender.c
index 33d6ef8..75171cb 100644
--- a/src/compositor/compositor-xrender.c
+++ b/src/compositor/compositor-xrender.c
@@ -108,9 +108,11 @@ typedef struct _MetaCompositorXRender
   guint enabled : 1;
   guint show_redraw : 1;
   guint debug : 1;
-  guint has_present :1;
 
+#ifdef HAVE_PRESENT
+  guint has_present : 1;
   int present_major;
+#endif /* HAVE_PRESENT */
 } MetaCompositorXRender;
 
 typedef struct _conv
@@ -147,18 +149,20 @@ typedef struct _MetaCompScreen
   Picture black_picture;
   Picture trans_black_picture;
   Picture root_tile;
-  XserverRegion prev_damage;
   XserverRegion all_damage;
+#ifdef HAVE_PRESENT
+  XserverRegion prev_damage;
+
+  XID present_eid;
+  gboolean use_present;
+  gboolean present_pending;
+#endif /* HAVE_PRESENT */
 
   guint overlays;
   gboolean compositor_active;
   gboolean clip_changed;
 
   GSList *dock_windows;
-
-  XID present_eid;
-  gboolean use_present;
-  gboolean present_pending;
 } MetaCompScreen;
 
 typedef struct _MetaCompWindow
@@ -691,6 +695,7 @@ find_window_for_child_window_in_display (MetaDisplay *display,
   return NULL;
 }
 
+#ifdef HAVE_PRESENT
 static MetaScreen *
 find_screen_from_output(MetaDisplay *display, Window output)
 {
@@ -708,6 +713,7 @@ find_screen_from_output(MetaDisplay *display, Window output)
     }
   return NULL;
 }
+#endif /* HAVE_PRESENT */
 
 static Picture
 solid_picture (MetaDisplay *display,
@@ -1406,9 +1412,9 @@ paint_windows (MetaScreen   *screen,
 #ifdef HAVE_PRESENT
   if (info->use_present)
     info->present_pending = present_flip (screen, region, root_pixmap);
-#endif
 
   if (!info->use_present || !info->present_pending)
+#endif /* HAVE_PRESENT */
     {
       XRenderComposite (xdisplay, PictOpSrc, root_buffer, None,
           info->root_picture, 0, 0, 0, 0, 0, 0,
@@ -1503,9 +1509,12 @@ repair_screen (MetaScreen *screen)
       else
 #endif /* HAVE_PRESENT */
         {
+          meta_error_trap_push (display);
           paint_all (screen, info->all_damage, info->root_current);
           XFixesDestroyRegion (xdisplay, info->all_damage);
           info->all_damage = None;
+          info->clip_changed = FALSE;
+          meta_error_trap_pop (display, FALSE);
         }
     }
 }
@@ -2591,28 +2600,28 @@ process_generic(MetaCompositorXRender   *compositor,
                 XGenericEvent           *event)
 {
   XGenericEventCookie *ge = (XGenericEventCookie *) event;
+  Display *xdisplay = meta_display_get_xdisplay (compositor->display);
+  XGetEventData(xdisplay, ge);
 
-  if (ge->extension == compositor->present_major)
+  switch (ge->evtype)
     {
-      Display *xdisplay = meta_display_get_xdisplay (compositor->display);
-      XGetEventData(xdisplay, ge);
-      switch (ge->evtype)
-        {
 #ifdef HAVE_PRESENT
-        case PresentConfigureNotify:
-          break;
-        case PresentCompleteNotify:
+    case PresentConfigureNotify:
+      break;
+    case PresentCompleteNotify:
+      {
+        if (ge->extension == compositor->present_major)
           {
             XPresentCompleteNotifyEvent *ce = ge->data;
             MetaScreen *screen = find_screen_from_output(compositor->display, ce->window);
             if (screen)
               xrender_present_complete(screen, ce);
           }
-          break;
+      }
+      break;
 #endif /* HAVE_PRESENT */
-        }
-      XFreeEventData(xdisplay, ge);
     }
+  XFreeEventData(xdisplay, ge);
 }
 
 static int
@@ -2776,12 +2785,11 @@ xrender_manage_screen (MetaCompositor *compositor,
   else
     meta_verbose ("Disabling shadows\n");
 
+#ifdef HAVE_PRESENT
   if (xrc->has_present)
     {
-#ifdef HAVE_PRESENT
       info->present_eid = XPresentSelectInput(xdisplay, info->output,
                                               PresentCompleteNotifyMask);
-#endif /* HAVE_PRESENT */
       info->use_present = TRUE;
       info->present_pending = FALSE;
     }
@@ -2790,6 +2798,7 @@ xrender_manage_screen (MetaCompositor *compositor,
       info->use_present = FALSE;
       g_warning ("XPresent not available");
     }
+#endif /* HAVE_PRESENT */
 
   XClearArea (xdisplay, info->output, 0, 0, 0, 0, TRUE);
 
@@ -3285,8 +3294,6 @@ meta_compositor_xrender_new (MetaDisplay *display)
   xrc->debug = FALSE;
 #ifdef HAVE_PRESENT
   xrc->has_present = XPresentQueryExtension(xdisplay, &xrc->present_major, NULL, NULL);
-#else
-  xrc->has_present = 0;
 #endif /* HAVE_PRESENT */
 
 #ifdef USE_IDLE_REPAINT
diff --git a/src/core/display.c b/src/core/display.c
index a721def..9601b4e 100644
--- a/src/core/display.c
+++ b/src/core/display.c
@@ -69,10 +69,6 @@
 	#include <X11/extensions/Xrender.h>
 #endif
 
-#ifdef HAVE_PRESENT
-	#include <X11/extensions/Xpresent.h>
-#endif
-
 #ifdef HAVE_XKB
 	#include <X11/XKBlib.h>
 #endif
diff --git a/src/core/screen.c b/src/core/screen.c
index 308795e..28d2feb 100644
--- a/src/core/screen.c
+++ b/src/core/screen.c
@@ -740,16 +740,15 @@ list_windows (MetaScreen *screen)
                             children[i], &info->attrs);
 
       if (meta_error_trap_pop_with_return (screen->display, TRUE))
-        {
+	{
           meta_verbose ("Failed to get attributes for window 0x%lx\n",
                         children[i]);
-          g_free (info);
-          continue;
+	  g_free (info);
         }
       else
         {
-          info->xwindow = children[i];
-        }
+	  info->xwindow = children[i];
+	}
 
       result = g_list_prepend (result, info);
     }
